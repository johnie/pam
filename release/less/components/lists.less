/*csslint outline-none:false*/

// Name:            List
// Description:     List style definitions
//
// Component:       pam-List
//
// Sub-objects:     pam-Item
//                  pam-Tile
//
// Modifiers:
//
// Sub-modifiers:	pam-Tile~"left"
// 					pam-Tile~"content"
// 					pam-Tile~"right"
// 					pam-Tile~"top"
//
// ==========================================================================


//  Imports
// ==========================================================================

@import "../core/variables";
@import "../mixins/lesshat-prefixed";


/***
 * Lists:
 * `pam-List` wraps a `pam-Item` which in turn can contain up to three type of tiles
 * `pam-Tile="[left | content | right]"`.
 */


/**
 * One line list item:
 * Use `pam-Item` to wrap one or more `pam-Tiles` and apply one row of content.
 *
 *     @example
 *     <div pam-List>
 *     		<div pam-Item>
 *     			<div pam-Tile="left">
 *     				<div sg-mock-icon></div>
 *     			</div>
 *	     		<div pam-Tile="content">
 *	     			<h3 pam-typography="subheader">Item content</h3>
 *	     		</div>
 *     		</div>
 *		</div>
 */

/**
 * Two line list item:
 * Use `pam-Item` to wrap one or more `pam-Tiles` and apply two rows of content.
 *
 *     @example
 *     <div pam-List>
 *     		<div pam-Item>
 *     			<div pam-Tile="left">
 *     				<div sg-mock-icon></div>
 *     			</div>
 *	     		<div pam-Tile="content">
 *	     			<h3 pam-typography="subheader">Item content</h3>
 *	     			<h4 pam-typography="caption">Item content</h4>
 *	     		</div>
 *     		</div>
 *		</div>
 */

/**
 * Three line list item:
 * Use `pam-Item` to wrap one or more `pam-Tiles`. Add `pam-Tile="top"` to align the left tile
 * and apply three rows of content.
 *
 *     @example
 *     <div pam-List>
 *     		<div pam-Item>
 *     			<div pam-Tile="left top">
 *     				<div sg-mock-icon></div>
 *     			</div>
 *	     		<div pam-Tile="content">
 *	     			<h3 pam-typography="subheader">Item content</h3>
 *	     			<h4 pam-typography="caption">Item content</h4>
 *	     			<p>Item content</p>
 *	     		</div>
 *     		</div>
 *		</div>
 */

/**
 * List item with right icon area:
 * `pam-Tile="right"` adds a right icon area for a list item.
 *
 *     @example
 *     <div pam-List>
 *     		<div pam-Item>
 *     			<div pam-Tile="left">
 *     				<div sg-mock-icon></div>
 *     			</div>
 *	     		<div pam-Tile="content">
 *	     			<h3 pam-typography="subheader">Item content</h3>
 *	     		</div>
 *  	   		<div pam-Tile="right">
 *     				<div sg-mock-icon></div>
 *  	   		</div>
 *     		</div>
 *		</div>
 */

/**
 * List items with dividers:
 * Use `pam-Item` to wrap one or more `pam-Tiles` and apply a `pam-Divider` after each item.
 *
 *     @example
 *     <div pam-List>
 *     		<div pam-Item>
 *     			<div pam-Tile="left top">
 *     				<div sg-mock-icon></div>
 *     			</div>
 *	     		<div pam-Tile="content">
 *	     			<h3 pam-typography="subheader">Item content</h3>
 *	     			<h4 pam-typography="caption">Item content</h4>
 *	     			<p>Item content</p>
 *	     		</div>
 *     		</div>
 *	     	<div pam-Divider="inset"></div>
 *     		<div pam-Item>
 *     			<div pam-Tile="left top">
 *     				<div sg-mock-icon></div>
 *     			</div>
 *	     		<div pam-Tile="content">
 *	     			<h3 pam-typography="subheader">Item content</h3>
 *	     			<h4 pam-typography="caption">Item content</h4>
 *	     			<p>Item content</p>
 *	     		</div>
 *     		</div>
 *	     	<div pam-Divider="inset"></div>
 *     		<div pam-Item>
 *     			<div pam-Tile="left top">
 *     				<div sg-mock-icon></div>
 *     			</div>
 *	     		<div pam-Tile="content">
 *	     			<h3 pam-typography="subheader">Item content</h3>
 *	     			<h4 pam-typography="caption">Item content</h4>
 *	     			<p>Item content</p>
 *	     		</div>
 *     		</div>
 *		</div>
 */

[pam-List] {
	padding: @space-8 0 @space-8 0;
	.hook-list;
}

[pam-Item] {
	.lh-display(flex);
	.lh-align-items(center);
	.lh-flex-direction(row);
	box-sizing: border-box;
	position: relative;
	padding: 0;
	line-height: @space-16;
	.hook-item;
}

[pam-Tile] {
	.lh-box-sizing(border-box);
	.hook-tile;
}

[pam-Tile~="left"] {
	.lh-display(flex);
	.lh-align-items(center);
	.lh-align-self(stretch);
	.lh-justify-content(center);
	width: @space-72;
	.hook-tile-left;
}

[pam-Tile~="content"] {
	.lh-flex(1);
	width: 100%;
	padding: @space-16 @space-16 @space-16 0;
	text-overflow: ellipsis;

	[pam-Subheader] {
		margin: 0;
		font-weight: 300;
		font-size: 16px;
	}

	[pam-Caption] {
		margin: 0;
		font-weight: 300;
		font-size: 12px;
	}

	p {
		margin: 0;
		font-size: @font-size-xxsmall;
	}

	.hook-tile-content;
}

[pam-Tile~="right"] {
	.lh-display(flex);
	.lh-align-self(stretch);
	.lh-align-items(center);
	padding-right: @space-16;
	.hook-tile-right;
}

[pam-Tile~="top"] {
	.lh-align-self(flex-start);
	padding-top: 20px;
	.hook-tile-top;
}


// Hooks
// ========================================================================

/**
 * Hooks:
 * `.hook-list`
 * `.hook-item`
 * `.hook-tile`
 * `.hook-tile-left`
 * `.hook-tile-content`
 * `.hook-tile-right`
 * `.hook-tile-top`
 */

.hook-list() {}
.hook-item() {}
.hook-tile() {}
.hook-tile-left() {}
.hook-tile-content() {}
.hook-tile-right() {}
.hook-tile-top() {}